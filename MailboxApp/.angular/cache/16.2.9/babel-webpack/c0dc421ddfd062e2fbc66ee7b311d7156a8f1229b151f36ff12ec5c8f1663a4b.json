{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./session.service\";\nconst defaultUser = null;\nexport class UserContextService {\n  constructor(sessionService, userContextService) {\n    this.sessionService = sessionService;\n    this.userContextService = userContextService;\n    this.user$ = new BehaviorSubject(defaultUser);\n    this.userRoles = [];\n    var data = this.sessionService.getItem(\"currentUser\");\n    if (data != null) {\n      this.user$.next(data);\n    }\n  }\n  setUser(user) {\n    this.sessionService.setItem(\"currentUser\", user);\n    this.user$.next(user);\n  }\n  logout() {\n    this.sessionService.removeItem(\"currentUser\");\n    this.user$.next(defaultUser);\n  }\n  setUserRoles(roles) {\n    this.userRoles = roles;\n  }\n  getUserRoles() {\n    return this.userContextService.user$._value.id;\n    ;\n  }\n  static #_ = this.ɵfac = function UserContextService_Factory(t) {\n    return new (t || UserContextService)(i0.ɵɵinject(i1.SessionService), i0.ɵɵinject(UserContextService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserContextService,\n    factory: UserContextService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","defaultUser","UserContextService","constructor","sessionService","userContextService","user$","userRoles","data","getItem","next","setUser","user","setItem","logout","removeItem","setUserRoles","roles","getUserRoles","_value","id","_","i0","ɵɵinject","i1","SessionService","_2","factory","ɵfac","providedIn"],"sources":["D:\\MailBox\\FrontEnd\\MailBox\\MailboxApp\\src\\app\\common\\user-context.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { SessionService } from './session.service';\nimport { BehaviorSubject } from 'rxjs';\nconst defaultUser = null\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserContextService {\n  public user$: any = new BehaviorSubject(defaultUser);\n  private userRoles: string[] = [];\n\n constructor(private sessionService: SessionService,private userContextService: UserContextService) {\n    var data = this.sessionService.getItem(\"currentUser\");\n    if (data != null) {\n      this.user$.next(data);\n    }\n  }\n\n public setUser(user: any) {\n    this.sessionService.setItem(\"currentUser\", user);\n    this.user$.next(user);\n  }\n\n  public logout() {\n    this.sessionService.removeItem(\"currentUser\");\n    this.user$.next(defaultUser);\n  }\n\n  setUserRoles(roles: string[]): void {\n    this.userRoles = roles;\n  }\n\n  getUserRoles(): string[] {\n    return this.userContextService.user$._value.id;;\n  }\n\n}\n"],"mappings":"AAEA,SAASA,eAAe,QAAQ,MAAM;;;AACtC,MAAMC,WAAW,GAAG,IAAI;AAIxB,OAAM,MAAOC,kBAAkB;EAI9BC,YAAoBC,cAA8B,EAASC,kBAAsC;IAA7E,KAAAD,cAAc,GAAdA,cAAc;IAAyB,KAAAC,kBAAkB,GAAlBA,kBAAkB;IAHrE,KAAAC,KAAK,GAAQ,IAAIN,eAAe,CAACC,WAAW,CAAC;IAC5C,KAAAM,SAAS,GAAa,EAAE;IAG9B,IAAIC,IAAI,GAAG,IAAI,CAACJ,cAAc,CAACK,OAAO,CAAC,aAAa,CAAC;IACrD,IAAID,IAAI,IAAI,IAAI,EAAE;MAChB,IAAI,CAACF,KAAK,CAACI,IAAI,CAACF,IAAI,CAAC;;EAEzB;EAEMG,OAAOA,CAACC,IAAS;IACrB,IAAI,CAACR,cAAc,CAACS,OAAO,CAAC,aAAa,EAAED,IAAI,CAAC;IAChD,IAAI,CAACN,KAAK,CAACI,IAAI,CAACE,IAAI,CAAC;EACvB;EAEOE,MAAMA,CAAA;IACX,IAAI,CAACV,cAAc,CAACW,UAAU,CAAC,aAAa,CAAC;IAC7C,IAAI,CAACT,KAAK,CAACI,IAAI,CAACT,WAAW,CAAC;EAC9B;EAEAe,YAAYA,CAACC,KAAe;IAC1B,IAAI,CAACV,SAAS,GAAGU,KAAK;EACxB;EAEAC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACb,kBAAkB,CAACC,KAAK,CAACa,MAAM,CAACC,EAAE;IAAC;EACjD;EAAC,QAAAC,CAAA,G;qBA3BUnB,kBAAkB,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,QAAA,CAAArB,kBAAA;EAAA;EAAA,QAAAwB,EAAA,G;WAAlBxB,kBAAkB;IAAAyB,OAAA,EAAlBzB,kBAAkB,CAAA0B,IAAA;IAAAC,UAAA,EAFjB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}