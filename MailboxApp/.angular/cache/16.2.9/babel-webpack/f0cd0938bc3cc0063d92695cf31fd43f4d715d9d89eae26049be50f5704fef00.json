{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./session.service\";\n//import { UserContextService } from './user-context.service';\nconst defaultUser = null;\nexport class AuthInterceptor {\n  constructor(sessionService) {\n    this.sessionService = sessionService;\n    this.user$ = new BehaviorSubject(defaultUser);\n    var data = this.sessionService.getItem(\"currentUser\");\n    if (data != null) {\n      this.user$.next(data);\n    }\n  }\n  intercept(request, next) {\n    debugger;\n    if (this.user$._value.token) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${this.user$._value.token}`\n        }\n      });\n    }\n    return next.handle(request);\n  }\n  static #_ = this.ɵfac = function AuthInterceptor_Factory(t) {\n    return new (t || AuthInterceptor)(i0.ɵɵinject(i1.SessionService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptor,\n    factory: AuthInterceptor.ɵfac\n  });\n}","map":{"version":3,"names":["BehaviorSubject","defaultUser","AuthInterceptor","constructor","sessionService","user$","data","getItem","next","intercept","request","_value","token","clone","setHeaders","Authorization","handle","_","i0","ɵɵinject","i1","SessionService","_2","factory","ɵfac"],"sources":["D:\\MailBox\\FrontEnd\\MailBox\\MailboxApp\\src\\app\\common\\auth.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { SessionService } from './session.service';\n//import { UserContextService } from './user-context.service';\nconst defaultUser = null\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n public user$: any = new BehaviorSubject(defaultUser);\n  constructor(private sessionService:SessionService) {\n    var data = this.sessionService.getItem(\"currentUser\");\n    if (data != null) {\n      this.user$.next(data);\n    }\n  }\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    debugger;\n    if(this.user$._value.token){\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${this.user$._value.token}`,\n        }\n      });\n    }\n    return next.handle(request);\n  }\n}\n"],"mappings":"AAOA,SAASA,eAAe,QAAoB,MAAM;;;AAElD;AACA,MAAMC,WAAW,GAAG,IAAI;AAExB,OAAM,MAAOC,eAAe;EAE1BC,YAAoBC,cAA6B;IAA7B,KAAAA,cAAc,GAAdA,cAAc;IAD5B,KAAAC,KAAK,GAAQ,IAAIL,eAAe,CAACC,WAAW,CAAC;IAEjD,IAAIK,IAAI,GAAG,IAAI,CAACF,cAAc,CAACG,OAAO,CAAC,aAAa,CAAC;IACrD,IAAID,IAAI,IAAI,IAAI,EAAE;MAChB,IAAI,CAACD,KAAK,CAACG,IAAI,CAACF,IAAI,CAAC;;EAEzB;EAEAG,SAASA,CAACC,OAA6B,EAAEF,IAAiB;IACxD;IACA,IAAG,IAAI,CAACH,KAAK,CAACM,MAAM,CAACC,KAAK,EAAC;MACzBF,OAAO,GAAGA,OAAO,CAACG,KAAK,CAAC;QACtBC,UAAU,EAAE;UACVC,aAAa,EAAE,UAAU,IAAI,CAACV,KAAK,CAACM,MAAM,CAACC,KAAK;;OAEnD,CAAC;;IAEJ,OAAOJ,IAAI,CAACQ,MAAM,CAACN,OAAO,CAAC;EAC7B;EAAC,QAAAO,CAAA,G;qBAnBUf,eAAe,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfpB,eAAe;IAAAqB,OAAA,EAAfrB,eAAe,CAAAsB;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}