{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CommonService {\n  constructor(httpclient) {\n    this.httpclient = httpclient;\n  }\n  //#region -------------- Http Without Tokens\n  //Simple get with dynamic response\n  get(_url) {\n    return this.httpclient.get(_url);\n  }\n  //Simple get with model response\n  get_model(_url) {\n    return this.httpclient.get(_url);\n  }\n  //Get with input param & model response\n  get_post_model(_url, param) {\n    return this.httpclient.get(_url, param);\n  }\n  fetchData(_url, param) {\n    return this.httpclient.post(_url, param).toPromise();\n  }\n  //Simple post encoded with dynamic response\n  post_encoded(_url, param) {\n    let headers = new HttpHeaders({\n      'Content-Type': 'multipart/form-data'\n    });\n    let options = {\n      headers: headers\n    };\n    return this.httpclient.post(_url, param, options);\n  }\n  //Simple post with dynamic response\n  post(_url, param) {\n    return this.httpclient.post(_url, param);\n  }\n  //Simple post with dynamic response\n  put(_url, param) {\n    return this.httpclient.put(_url, param);\n  }\n  delete(id) {\n    return this.httpclient.delete(id);\n  }\n  getTokenHeaders(token) {\n    return new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n  }\n  static #_ = this.ɵfac = function CommonService_Factory(t) {\n    return new (t || CommonService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CommonService,\n    factory: CommonService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","CommonService","constructor","httpclient","get","_url","get_model","get_post_model","param","fetchData","post","toPromise","post_encoded","headers","options","put","delete","id","getTokenHeaders","token","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\MailBox\\FrontEnd\\MailBox\\MailboxApp\\src\\app\\common\\common.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonService {\n\n  constructor(private httpclient: HttpClient) { }\n  //#region -------------- Http Without Tokens\n//Simple get with dynamic response\npublic get(_url: string) {\n  return this.httpclient.get<any>(_url);\n}\n//Simple get with model response\npublic get_model(_url: string): Observable<any> {\n  return this.httpclient.get<any>(_url);\n}\n\n//Get with input param & model response\npublic get_post_model(_url: string, param: any): Observable<any> {\n  return this.httpclient.get<any>(_url, param);\n}\n\npublic fetchData(_url: string, param: any) {\n  return this.httpclient.post<any>(_url, param).toPromise();\n}\n\n//Simple post encoded with dynamic response\npublic post_encoded(_url: string, param: any) {\n  let headers = new HttpHeaders({\n    'Content-Type': 'multipart/form-data'\n  });\n  let options = { headers: headers };\n  return this.httpclient.post<any>(_url, param, options);\n}\n\n//Simple post with dynamic response\npublic post(_url: string, param: any) {\n  return this.httpclient.post(_url, param);\n}\n\n//Simple post with dynamic response\npublic put(_url: string, param: any) {\n  return this.httpclient.put<any>(_url, param);\n}\npublic delete(id:any){\n  return this.httpclient.delete<any>(id)\n}\n\n\ngetTokenHeaders(token: string): HttpHeaders {\n  return new HttpHeaders({\n    'Authorization': `Bearer ${token}`\n  });\n}\n//#endregion\n}\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAK9D,OAAM,MAAOC,aAAa;EAExBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;EAAgB;EAC9C;EACF;EACOC,GAAGA,CAACC,IAAY;IACrB,OAAO,IAAI,CAACF,UAAU,CAACC,GAAG,CAAMC,IAAI,CAAC;EACvC;EACA;EACOC,SAASA,CAACD,IAAY;IAC3B,OAAO,IAAI,CAACF,UAAU,CAACC,GAAG,CAAMC,IAAI,CAAC;EACvC;EAEA;EACOE,cAAcA,CAACF,IAAY,EAAEG,KAAU;IAC5C,OAAO,IAAI,CAACL,UAAU,CAACC,GAAG,CAAMC,IAAI,EAAEG,KAAK,CAAC;EAC9C;EAEOC,SAASA,CAACJ,IAAY,EAAEG,KAAU;IACvC,OAAO,IAAI,CAACL,UAAU,CAACO,IAAI,CAAML,IAAI,EAAEG,KAAK,CAAC,CAACG,SAAS,EAAE;EAC3D;EAEA;EACOC,YAAYA,CAACP,IAAY,EAAEG,KAAU;IAC1C,IAAIK,OAAO,GAAG,IAAIb,WAAW,CAAC;MAC5B,cAAc,EAAE;KACjB,CAAC;IACF,IAAIc,OAAO,GAAG;MAAED,OAAO,EAAEA;IAAO,CAAE;IAClC,OAAO,IAAI,CAACV,UAAU,CAACO,IAAI,CAAML,IAAI,EAAEG,KAAK,EAAEM,OAAO,CAAC;EACxD;EAEA;EACOJ,IAAIA,CAACL,IAAY,EAAEG,KAAU;IAClC,OAAO,IAAI,CAACL,UAAU,CAACO,IAAI,CAACL,IAAI,EAAEG,KAAK,CAAC;EAC1C;EAEA;EACOO,GAAGA,CAACV,IAAY,EAAEG,KAAU;IACjC,OAAO,IAAI,CAACL,UAAU,CAACY,GAAG,CAAMV,IAAI,EAAEG,KAAK,CAAC;EAC9C;EACOQ,MAAMA,CAACC,EAAM;IAClB,OAAO,IAAI,CAACd,UAAU,CAACa,MAAM,CAAMC,EAAE,CAAC;EACxC;EAGAC,eAAeA,CAACC,KAAa;IAC3B,OAAO,IAAInB,WAAW,CAAC;MACrB,eAAe,EAAE,UAAUmB,KAAK;KACjC,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBAjDYnB,aAAa,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbxB,aAAa;IAAAyB,OAAA,EAAbzB,aAAa,CAAA0B,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}