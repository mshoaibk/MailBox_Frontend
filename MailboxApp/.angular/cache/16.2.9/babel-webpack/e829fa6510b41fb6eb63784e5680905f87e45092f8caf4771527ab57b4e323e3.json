{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let LoginComponent = class LoginComponent {\n  constructor(commonService, constantsService, userContextService, toastrService) {\n    this.commonService = commonService;\n    this.constantsService = constantsService;\n    this.userContextService = userContextService;\n    this.toastrService = toastrService;\n    this.userLogin = {};\n    this.loginRole = {\n      'admin': 'admin',\n      'support': 'support'\n    };\n    this.SessinData = {};\n  }\n  ngOnInit() {\n    this.userLogin.email = '';\n    this.userLogin.password = '';\n    this.userLogin.role = '';\n    // this.SessinData.token = '';\n    // this. SessinData.userRole =''; \n    // this. SessinData.location = '';\n    // this. SessinData.email = '';\n    // this. SessinData.id = '';\n    // this.SessinData.phoneNumber =''; \n  }\n\n  Login() {\n    this.SessinData.token = '';\n    this.SessinData.userRole = '';\n    this.SessinData.location = '';\n    this.SessinData.email = '';\n    this.SessinData.id = '';\n    this.SessinData.phoneNumber = '';\n    let userModel = {\n      Email: this.userLogin.email,\n      Password: this.userLogin.password\n      //Role:this.userLogin.role\n    };\n\n    console.log('role', userModel);\n    // this.spinnerService.show();\n    let url = this.constantsService.urlLogin;\n    this.commonService.post(url, userModel).subscribe(data => {\n      //  this.spinnerService.hide();\n      let userData = data;\n      console.log(userData);\n      if (userData.status == true) {\n        debugger;\n        this.SessinData.token = userData.token.toString();\n        this.SessinData.userRole = userData.userData.role;\n        this.SessinData.location = userData.userData.location;\n        this.SessinData.email = userData.userData.email;\n        this.SessinData.id = userData.userData.id;\n        this.SessinData.phoneNumber = userData.userData.phoneNumber;\n        ;\n        this.userContextService.setUser(this.SessinData);\n        //   userData.user.companyID = userData.companyID ? userData.companyID : 0;\n        //   userData.user.companyName = userData.companyName ? userData.companyName : '';\n        //   userData.user.employeeId = userData.employeeId ? userData.employeeId : '';\n        //   userData.user.roles = userData.roles && userData.roles.length > 0 ? userData.roles : [];\n        //   this.userContextService.setUserRoles(userData.roles);\n        //   this.routeStateService.add(\"Dashboard\", '/dashboard', null, true);   \n      }\n      // if (userData && userData.status) {\n      //   userData.user.userRole = userData.userRole;\n      //   userData.user.companyID = userData.companyID ? userData.companyID : 0;\n      //   userData.user.companyName = userData.companyName ? userData.companyName : '';\n      //   userData.user.employeeId = userData.employeeId ? userData.employeeId : '';\n      //   userData.user.roles = userData.roles && userData.roles.length > 0 ? userData.roles : [];\n      //   this.userContextService.setUserRoles(userData.roles);\n      //   return;\n      // }\n      // this.toastrService.error(userData.message, 'Not Authenticated');\n      return;\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})], LoginComponent);","map":{"version":3,"names":["Component","LoginComponent","constructor","commonService","constantsService","userContextService","toastrService","userLogin","loginRole","SessinData","ngOnInit","email","password","role","Login","token","userRole","location","id","phoneNumber","userModel","Email","Password","console","log","url","urlLogin","post","subscribe","data","userData","status","toString","setUser","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\MailBox\\FrontEnd\\MailBox\\MailboxApp\\src\\app\\auth\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CommonService } from 'src/app/common/common.service';\nimport { ConstantService } from 'src/app/common/constant.service';\nimport { UserContextService } from 'src/app/common/user-context.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n  userLogin: any = {};\n  loginRole: any = {\n    'admin': 'admin',\n    'support': 'support'\n  }\n  SessinData: any = {};\n  constructor(private commonService: CommonService,\n    private constantsService: ConstantService, private userContextService: UserContextService\n    ,\n    private toastrService: ToastrService,\n    // private spinnerService: NgxSpinnerService\n    ) { }\n\n  ngOnInit(): void {\n    this.userLogin.email = '';\n    this.userLogin.password = '';\n    this.userLogin.role = '';\n\n\n    // this.SessinData.token = '';\n    // this. SessinData.userRole =''; \n    // this. SessinData.location = '';\n    // this. SessinData.email = '';\n    // this. SessinData.id = '';\n    // this.SessinData.phoneNumber =''; \n  }\n\n  Login() {\n    this.SessinData.token = '';\n    this. SessinData.userRole =''; \n    this. SessinData.location = '';\n    this. SessinData.email = '';\n    this. SessinData.id = '';\n    this.SessinData.phoneNumber =''; \n\n    let userModel = {\n      Email: this.userLogin.email,\n      Password: this.userLogin.password,\n      //Role:this.userLogin.role\n    }\n    console.log('role', userModel)\n   // this.spinnerService.show();\n    let url = this.constantsService.urlLogin;\n    this.commonService.post(url, userModel).subscribe(data => {\n    //  this.spinnerService.hide();\n      let userData: any = data;\n      \n      console.log(userData);\n      if(userData.status == true){\n        \n       debugger;\n        this.SessinData.token = userData.token.toString();\n        this.SessinData.userRole = userData.userData.role;\n        this.SessinData.location = userData.userData.location;\n        this.SessinData.email = userData.userData.email;\n        this.SessinData.id = userData.userData.id;\n        this.SessinData.phoneNumber = userData.userData.phoneNumber;\n        ;\n        this.userContextService.setUser(this.SessinData); \n      //   userData.user.companyID = userData.companyID ? userData.companyID : 0;\n      //   userData.user.companyName = userData.companyName ? userData.companyName : '';\n      //   userData.user.employeeId = userData.employeeId ? userData.employeeId : '';\n      //   userData.user.roles = userData.roles && userData.roles.length > 0 ? userData.roles : [];\n      //   this.userContextService.setUserRoles(userData.roles);\n      //   this.routeStateService.add(\"Dashboard\", '/dashboard', null, true);   \n      }\n      // if (userData && userData.status) {\n      //   userData.user.userRole = userData.userRole;\n      //   userData.user.companyID = userData.companyID ? userData.companyID : 0;\n      //   userData.user.companyName = userData.companyName ? userData.companyName : '';\n      //   userData.user.employeeId = userData.employeeId ? userData.employeeId : '';\n      //   userData.user.roles = userData.roles && userData.roles.length > 0 ? userData.roles : [];\n      //   this.userContextService.setUserRoles(userData.roles);\n       \n      //   return;\n      // }\n     // this.toastrService.error(userData.message, 'Not Authenticated');\n      return;\n    });\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAUlC,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAOzBC,YAAoBC,aAA4B,EACtCC,gBAAiC,EAAUC,kBAAsC,EAEjFC,aAA4B;IAHlB,KAAAH,aAAa,GAAbA,aAAa;IACvB,KAAAC,gBAAgB,GAAhBA,gBAAgB;IAA2B,KAAAC,kBAAkB,GAAlBA,kBAAkB;IAE7D,KAAAC,aAAa,GAAbA,aAAa;IATvB,KAAAC,SAAS,GAAQ,EAAE;IACnB,KAAAC,SAAS,GAAQ;MACf,OAAO,EAAE,OAAO;MAChB,SAAS,EAAE;KACZ;IACD,KAAAC,UAAU,GAAQ,EAAE;EAMd;EAENC,QAAQA,CAAA;IACN,IAAI,CAACH,SAAS,CAACI,KAAK,GAAG,EAAE;IACzB,IAAI,CAACJ,SAAS,CAACK,QAAQ,GAAG,EAAE;IAC5B,IAAI,CAACL,SAAS,CAACM,IAAI,GAAG,EAAE;IAGxB;IACA;IACA;IACA;IACA;IACA;EACF;;EAEAC,KAAKA,CAAA;IACH,IAAI,CAACL,UAAU,CAACM,KAAK,GAAG,EAAE;IAC1B,IAAI,CAAEN,UAAU,CAACO,QAAQ,GAAE,EAAE;IAC7B,IAAI,CAAEP,UAAU,CAACQ,QAAQ,GAAG,EAAE;IAC9B,IAAI,CAAER,UAAU,CAACE,KAAK,GAAG,EAAE;IAC3B,IAAI,CAAEF,UAAU,CAACS,EAAE,GAAG,EAAE;IACxB,IAAI,CAACT,UAAU,CAACU,WAAW,GAAE,EAAE;IAE/B,IAAIC,SAAS,GAAG;MACdC,KAAK,EAAE,IAAI,CAACd,SAAS,CAACI,KAAK;MAC3BW,QAAQ,EAAE,IAAI,CAACf,SAAS,CAACK;MACzB;KACD;;IACDW,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEJ,SAAS,CAAC;IAC/B;IACC,IAAIK,GAAG,GAAG,IAAI,CAACrB,gBAAgB,CAACsB,QAAQ;IACxC,IAAI,CAACvB,aAAa,CAACwB,IAAI,CAACF,GAAG,EAAEL,SAAS,CAAC,CAACQ,SAAS,CAACC,IAAI,IAAG;MACzD;MACE,IAAIC,QAAQ,GAAQD,IAAI;MAExBN,OAAO,CAACC,GAAG,CAACM,QAAQ,CAAC;MACrB,IAAGA,QAAQ,CAACC,MAAM,IAAI,IAAI,EAAC;QAE1B;QACC,IAAI,CAACtB,UAAU,CAACM,KAAK,GAAGe,QAAQ,CAACf,KAAK,CAACiB,QAAQ,EAAE;QACjD,IAAI,CAACvB,UAAU,CAACO,QAAQ,GAAGc,QAAQ,CAACA,QAAQ,CAACjB,IAAI;QACjD,IAAI,CAACJ,UAAU,CAACQ,QAAQ,GAAGa,QAAQ,CAACA,QAAQ,CAACb,QAAQ;QACrD,IAAI,CAACR,UAAU,CAACE,KAAK,GAAGmB,QAAQ,CAACA,QAAQ,CAACnB,KAAK;QAC/C,IAAI,CAACF,UAAU,CAACS,EAAE,GAAGY,QAAQ,CAACA,QAAQ,CAACZ,EAAE;QACzC,IAAI,CAACT,UAAU,CAACU,WAAW,GAAGW,QAAQ,CAACA,QAAQ,CAACX,WAAW;QAC3D;QACA,IAAI,CAACd,kBAAkB,CAAC4B,OAAO,CAAC,IAAI,CAACxB,UAAU,CAAC;QAClD;QACA;QACA;QACA;QACA;QACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MAEA;MACA;MACD;MACC;IACF,CAAC,CAAC;EACJ;CACD;AAjFYR,cAAc,GAAAiC,UAAA,EAL1BlC,SAAS,CAAC;EACTmC,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWpC,cAAc,CAiF1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}