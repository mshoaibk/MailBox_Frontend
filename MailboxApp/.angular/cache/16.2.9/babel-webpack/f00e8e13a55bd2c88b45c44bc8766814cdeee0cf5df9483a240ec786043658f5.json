{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/common/common.service\";\nimport * as i2 from \"src/app/common/constant.service\";\nimport * as i3 from \"src/app/common/user-context.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/forms\";\nconst _c0 = function () {\n  return [\"/app-signup\"];\n};\nexport class LoginComponent {\n  constructor(commonService, constantsService, userContextService) {\n    this.commonService = commonService;\n    this.constantsService = constantsService;\n    this.userContextService = userContextService;\n    this.userLogin = {};\n    this.loginRole = {\n      'admin': 'admin',\n      'support': 'support'\n    };\n    this.SessinData = {};\n  }\n  ngOnInit() {\n    this.userLogin.email = '';\n    this.userLogin.password = '';\n    this.userLogin.role = '';\n    // this.SessinData.token = '';\n    // this. SessinData.userRole =''; \n    // this. SessinData.location = '';\n    // this. SessinData.email = '';\n    // this. SessinData.id = '';\n    // this.SessinData.phoneNumber =''; \n  }\n\n  Login() {\n    this.SessinData.token = '';\n    this.SessinData.userRole = '';\n    this.SessinData.location = '';\n    this.SessinData.email = '';\n    this.SessinData.id = '';\n    this.SessinData.phoneNumber = '';\n    let userModel = {\n      Email: this.userLogin.email,\n      Password: this.userLogin.password\n      //Role:this.userLogin.role\n    };\n\n    console.log('role', userModel);\n    // this.spinnerService.show();\n    let url = this.constantsService.urlLogin;\n    this.commonService.post(url, userModel).subscribe(data => {\n      //  this.spinnerService.hide();\n      let userData = data;\n      console.log(userData);\n      if (userData.status == true) {\n        debugger;\n        this.SessinData.token = userData.token.toString();\n        this.SessinData.userRole = userData.userData.role;\n        this.SessinData.location = userData.userData.location;\n        this.SessinData.email = userData.userData.email;\n        this.SessinData.id = userData.userData.id;\n        this.SessinData.phoneNumber = userData.userData.phoneNumber;\n        ;\n        this.userContextService.setUser(this.SessinData);\n        //   userData.user.companyID = userData.companyID ? userData.companyID : 0;\n        //   userData.user.companyName = userData.companyName ? userData.companyName : '';\n        //   userData.user.employeeId = userData.employeeId ? userData.employeeId : '';\n        //   userData.user.roles = userData.roles && userData.roles.length > 0 ? userData.roles : [];\n        //   this.userContextService.setUserRoles(userData.roles);\n        //   this.routeStateService.add(\"Dashboard\", '/dashboard', null, true);   \n      }\n      // if (userData && userData.status) {\n      //   userData.user.userRole = userData.userRole;\n      //   userData.user.companyID = userData.companyID ? userData.companyID : 0;\n      //   userData.user.companyName = userData.companyName ? userData.companyName : '';\n      //   userData.user.employeeId = userData.employeeId ? userData.employeeId : '';\n      //   userData.user.roles = userData.roles && userData.roles.length > 0 ? userData.roles : [];\n      //   this.userContextService.setUserRoles(userData.roles);\n      //   return;\n      // }\n      // this.toastrService.error(userData.message, 'Not Authenticated');\n      return;\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.CommonService), i0.ɵɵdirectiveInject(i2.ConstantService), i0.ɵɵdirectiveInject(i3.UserContextService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 24,\n    vars: 4,\n    consts: [[1, \"main\"], [1, \"text-center\", \"bg-light\"], [1, \"login-text\"], [1, \"d-flex\", \"justify-content-center\"], [1, \"content_area\", \"mt-3\", \"mb-4\"], [1, \"form-group\"], [1, \"label_style\"], [\"type\", \"text\", \"placeholder\", \"Email\", 1, \"form-control\", \"mt-2\", 3, \"ngModel\", \"ngModelChange\", \"keyup.enter\"], [1, \"form-group\", \"mt-3\"], [\"type\", \"password\", \"placeholder\", \"Password\", 1, \"form-control\", \"mt-2\", 3, \"ngModel\", \"ngModelChange\", \"keyup.enter\"], [1, \"text-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn_submit\", \"mt-4\", 3, \"click\"], [1, \"button-text\"], [1, \"mt-4\", \"text-center\"], [1, \"not-member\"], [3, \"routerLink\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"p\", 2);\n        i0.ɵɵtext(3, \"Login\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"div\", 4)(6, \"div\", 5)(7, \"label\", 6);\n        i0.ɵɵtext(8, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.userLogin.email = $event;\n        })(\"keyup.enter\", function LoginComponent_Template_input_keyup_enter_9_listener() {\n          return ctx.Login();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 8)(11, \"label\", 6);\n        i0.ɵɵtext(12, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.userLogin.password = $event;\n        })(\"keyup.enter\", function LoginComponent_Template_input_keyup_enter_13_listener() {\n          return ctx.Login();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 10)(15, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_15_listener() {\n          return ctx.Login();\n        });\n        i0.ɵɵelementStart(16, \"div\", 12);\n        i0.ɵɵtext(17, \"Login\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(18, \"div\", 13)(19, \"p\", 14);\n        i0.ɵɵtext(20, \" Not a member? \");\n        i0.ɵɵelementStart(21, \"span\")(22, \"a\", 15);\n        i0.ɵɵtext(23, \"Register\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngModel\", ctx.userLogin.email);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.userLogin.password);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(3, _c0));\n      }\n    },\n    dependencies: [i4.RouterLink, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["LoginComponent","constructor","commonService","constantsService","userContextService","userLogin","loginRole","SessinData","ngOnInit","email","password","role","Login","token","userRole","location","id","phoneNumber","userModel","Email","Password","console","log","url","urlLogin","post","subscribe","data","userData","status","toString","setUser","_","i0","ɵɵdirectiveInject","i1","CommonService","i2","ConstantService","i3","UserContextService","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_input_ngModelChange_9_listener","$event","LoginComponent_Template_input_keyup_enter_9_listener","LoginComponent_Template_input_ngModelChange_13_listener","LoginComponent_Template_input_keyup_enter_13_listener","LoginComponent_Template_button_click_15_listener","ɵɵadvance","ɵɵproperty","ɵɵpureFunction0","_c0"],"sources":["D:\\MailBox\\FrontEnd\\MailBox\\MailboxApp\\src\\app\\auth\\login\\login.component.ts","D:\\MailBox\\FrontEnd\\MailBox\\MailboxApp\\src\\app\\auth\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CommonService } from 'src/app/common/common.service';\nimport { ConstantService } from 'src/app/common/constant.service';\nimport { UserContextService } from 'src/app/common/user-context.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\n  userLogin: any = {};\n  loginRole: any = {\n    'admin': 'admin',\n    'support': 'support'\n  }\n  SessinData: any = {};\n  constructor(private commonService: CommonService,\n    private constantsService: ConstantService, private userContextService: UserContextService\n    ,\n    //  private toastrService: ToastrService,\n    // private spinnerService: NgxSpinnerService\n    ) { }\n\n  ngOnInit(): void {\n    this.userLogin.email = '';\n    this.userLogin.password = '';\n    this.userLogin.role = '';\n\n\n    // this.SessinData.token = '';\n    // this. SessinData.userRole =''; \n    // this. SessinData.location = '';\n    // this. SessinData.email = '';\n    // this. SessinData.id = '';\n    // this.SessinData.phoneNumber =''; \n  }\n\n  Login() {\n    this.SessinData.token = '';\n    this. SessinData.userRole =''; \n    this. SessinData.location = '';\n    this. SessinData.email = '';\n    this. SessinData.id = '';\n    this.SessinData.phoneNumber =''; \n\n    let userModel = {\n      Email: this.userLogin.email,\n      Password: this.userLogin.password,\n      //Role:this.userLogin.role\n    }\n    console.log('role', userModel)\n   // this.spinnerService.show();\n    let url = this.constantsService.urlLogin;\n    this.commonService.post(url, userModel).subscribe(data => {\n    //  this.spinnerService.hide();\n      let userData: any = data;\n      \n      console.log(userData);\n      if(userData.status == true){\n        \n       debugger;\n        this.SessinData.token = userData.token.toString();\n        this.SessinData.userRole = userData.userData.role;\n        this.SessinData.location = userData.userData.location;\n        this.SessinData.email = userData.userData.email;\n        this.SessinData.id = userData.userData.id;\n        this.SessinData.phoneNumber = userData.userData.phoneNumber;\n        ;\n        this.userContextService.setUser(this.SessinData); \n      //   userData.user.companyID = userData.companyID ? userData.companyID : 0;\n      //   userData.user.companyName = userData.companyName ? userData.companyName : '';\n      //   userData.user.employeeId = userData.employeeId ? userData.employeeId : '';\n      //   userData.user.roles = userData.roles && userData.roles.length > 0 ? userData.roles : [];\n      //   this.userContextService.setUserRoles(userData.roles);\n      //   this.routeStateService.add(\"Dashboard\", '/dashboard', null, true);   \n      }\n      // if (userData && userData.status) {\n      //   userData.user.userRole = userData.userRole;\n      //   userData.user.companyID = userData.companyID ? userData.companyID : 0;\n      //   userData.user.companyName = userData.companyName ? userData.companyName : '';\n      //   userData.user.employeeId = userData.employeeId ? userData.employeeId : '';\n      //   userData.user.roles = userData.roles && userData.roles.length > 0 ? userData.roles : [];\n      //   this.userContextService.setUserRoles(userData.roles);\n       \n      //   return;\n      // }\n     // this.toastrService.error(userData.message, 'Not Authenticated');\n      return;\n    });\n  }\n}\n","\n<div class=\"main\">\n    <div class=\"text-center bg-light\">\n      <p class=\"login-text\">Login</p>\n    </div>\n    <div class=\"d-flex justify-content-center\">\n      <div class=\"content_area mt-3 mb-4\">\n        <div class=\"form-group\">\n          <label class=\"label_style\">Email</label>\n          <input type=\"text\" class=\"form-control mt-2\" placeholder=\"Email\" [(ngModel)]=\"userLogin.email\" (keyup.enter)=\"Login()\"/>\n        </div>\n  \n        <div class=\"form-group mt-3\">\n          <label class=\"label_style\">Password</label>\n          <input type=\"password\" class=\"form-control mt-2\" placeholder=\"Password\" [(ngModel)]=\"userLogin.password\" (keyup.enter)=\"Login()\"/>\n        </div>\n  \n        <!-- <div class=\"form-group mt-3\">\n          <label class=\"label_style\">Role</label>\n          <select class=\"form-control mt-2\" [(ngModel)]=\"userLogin.role\" (keyup.enter)=\"Login()\">\n            <option *ngFor=\"let roleKey of keys(loginRole)\" [value]=\"roleKey\">{{ loginRole[roleKey] }}</option>\n          </select>\n        </div> -->\n  \n        <div class=\"text-center\">\n          <button type=\"submit\" (click)=\"Login()\" class=\"btn btn_submit mt-4\">\n            <div class=\"button-text\">Login</div>\n          </button>\n        </div>\n        <div class=\"mt-4 text-center\">\n          <p class=\"not-member\">\n            Not a member?\n            <span><a [routerLink]=\"['/app-signup']\">Register</a></span>\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}